// <auto-generated />
using System;
using BookingSystem.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BookingSystem.Infrastructure.Data.Migrations
{
    [DbContext(typeof(BookingSystemContext))]
    [Migration("20190921174007_InitialModel")]
    partial class InitialModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("BookingSystem.BuisnessLogic.Entities.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AppointmentStatus");

                    b.Property<int>("AppointmentTypeId");

                    b.Property<int>("CustomerId");

                    b.Property<DateTime>("Date");

                    b.Property<string>("Description");

                    b.Property<int>("EmployeeId");

                    b.Property<string>("EndTime");

                    b.Property<string>("StartTime");

                    b.HasKey("Id");

                    b.HasIndex("AppointmentTypeId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("BookingSystem.BuisnessLogic.Entities.AppointmentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Duration");

                    b.Property<string>("Name")
                        .HasMaxLength(60);

                    b.HasKey("Id");

                    b.ToTable("AppointmentTypes");
                });

            modelBuilder.Entity("BookingSystem.BuisnessLogic.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("EmailAddress")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<string>("PhoneNumber")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("BookingSystem.BuisnessLogic.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("PhoneNumber");

                    b.Property<int>("SalonId");

                    b.HasKey("Id");

                    b.HasIndex("SalonId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("BookingSystem.BuisnessLogic.Entities.Salon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AddressApartmentNumber");

                    b.Property<int>("AddressBuildingNumber");

                    b.Property<string>("AddressCity");

                    b.Property<string>("AddressStreet");

                    b.Property<string>("FullName");

                    b.Property<string>("Name");

                    b.Property<string>("PhoneNumber");

                    b.HasKey("Id");

                    b.ToTable("Salons");
                });

            modelBuilder.Entity("BookingSystem.BuisnessLogic.Entities.WorkingHour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CloseHour");

                    b.Property<int>("DayOfWeek");

                    b.Property<string>("OpenHour");

                    b.Property<int?>("SalonId");

                    b.HasKey("Id");

                    b.HasIndex("SalonId");

                    b.ToTable("WorkingHours");
                });

            modelBuilder.Entity("BookingSystem.BuisnessLogic.Entities.Appointment", b =>
                {
                    b.HasOne("BookingSystem.BuisnessLogic.Entities.AppointmentType", "AppointmentType")
                        .WithMany("Appointments")
                        .HasForeignKey("AppointmentTypeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BookingSystem.BuisnessLogic.Entities.Customer", "Customer")
                        .WithMany("Appointments")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BookingSystem.BuisnessLogic.Entities.Employee", "Employee")
                        .WithMany("Appointments")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("BookingSystem.BuisnessLogic.Entities.Employee", b =>
                {
                    b.HasOne("BookingSystem.BuisnessLogic.Entities.Salon", "Salon")
                        .WithMany("Employees")
                        .HasForeignKey("SalonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BookingSystem.BuisnessLogic.Entities.WorkingHour", b =>
                {
                    b.HasOne("BookingSystem.BuisnessLogic.Entities.Salon")
                        .WithMany("WorkingHours")
                        .HasForeignKey("SalonId");
                });
#pragma warning restore 612, 618
        }
    }
}
